[project]
name = "marktripy"
version = "0.1.0"
description = "A Python package for converting Markdown to AST and back to Markdown"
readme = "README.md"
requires-python = ">=3.12"
license = "MIT"
authors = [
    { name = "Adam", email = "adam@example.com" }
]
keywords = ["markdown", "ast", "parser", "converter", "commonmark"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Text Processing :: Markup",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "fire>=0.7.0",
    "loguru>=0.7.3",
    "markdown-it-py[linkify,plugins]>=3.0.0",
    "mistletoe>=1.4.0",
    "rich>=14.1.0",
]

[project.scripts]
marktripy = "marktripy.cli:main"

[project.urls]
Homepage = "https://github.com/yourusername/marktripy"
Repository = "https://github.com/yourusername/marktripy"
Issues = "https://github.com/yourusername/marktripy/issues"

[dependency-groups]
dev = [
    "black>=25.1.0",
    "hypothesis>=6.136.6",
    "mypy>=1.14.1",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.5",
    "twine>=6.0.2",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=marktripy",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--verbose",
]

[tool.black]
line-length = 100
target-version = ["py312"]
include = '\.pyi?$'

[tool.ruff]
line-length = 100
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "N",    # pep8-naming
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "DTZ",  # flake8-datetimez
    "T20",  # flake8-print
    "RET",  # flake8-return
    "SIM",  # flake8-simplify
    "PTH",  # flake8-use-pathlib
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["T20"]  # Allow print statements in tests

[tool.coverage.run]
branch = true
source = ["marktripy"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]
